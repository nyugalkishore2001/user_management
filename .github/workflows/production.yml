name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE: nyugalkishore/user_management
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
  POSTGRES_DB: myappdb

jobs:
  test:
    runs-on: ubuntu-latest
    # ... (keep your existing test job configuration)

  build-scan-push:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE }}:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:cache
          cache-to: type=inline,mode=max
          
      - name: Scan with Trivy
        if: github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          exit-code: '0'  # Continue workflow even if vulnerabilities found
          ignore-unfixed: false
          severity: CRITICAL,HIGH
          vuln-type: os,library
          
      - name: Upload SARIF results
        if: github.event_name != 'pull_request'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          
      - name: Check for critical vulnerabilities
        if: github.event_name != 'pull_request'
        run: |
          if grep -q '"severity": "CRITICAL"' trivy-results.sarif; then
            echo "CRITICAL vulnerabilities found - failing build" >&2
            exit 1
          fi
          if grep -q '"severity": "HIGH"' trivy-results.sarif; then
            echo "HIGH vulnerabilities found - check GitHub Security tab" >&2
          fi