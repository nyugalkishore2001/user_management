version: '3.8'

services:
  postgres:
    image: postgres:16.2
    container_name: postgres  # Explicit container naming
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persistent storage
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d myappdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-network:
        aliases:
          - db  # Additional network alias

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin  # Explicit container naming
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network

  fastapi:
    build: .
    container_name: fastapi  # Explicit container naming
    volumes:
      - ./:/myapp/
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/myappdb
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx  # Explicit container naming
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - fastapi
    networks:
      - app-network

volumes:
  postgres-data:
  pgadmin-data:

networks:
  app-network:
    driver: bridge